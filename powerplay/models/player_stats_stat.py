# coding: utf-8

"""
    NHL API

    Documenting the publicly accessible portions of the NHL API.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PlayerStatsStat(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'time_on_ice': 'str',
        'assists': 'str',
        'goals': 'float',
        'pim': 'float',
        'shots': 'float',
        'games': 'float',
        'hits': 'float',
        'power_play_goals': 'float',
        'power_play_points': 'float',
        'power_play_time_on_ice': 'float',
        'even_time_on_ice': 'float',
        'penalty_minutes': 'float',
        'face_off_pct': 'float',
        'shot_pct': 'float',
        'game_winning_goals': 'float',
        'over_time_goals': 'float',
        'short_handed_goals': 'float',
        'short_handed_points': 'float',
        'short_handed_time_on_ice': 'str',
        'blocked': 'float',
        'plus_minus': 'float',
        'points': 'float',
        'shifts': 'float',
        'time_on_ice_per_game': 'str',
        'even_time_on_ice_per_game': 'str',
        'short_handed_time_on_ice_per_game': 'str',
        'power_play_time_on_ice_per_game': 'str',
        'rank_power_play_goals': 'str',
        'rank_blocked_shots': 'str',
        'rank_assists': 'str',
        'rank_shot_pct': 'str',
        'rank_goals': 'str',
        'rank_hits': 'str',
        'rank_penalty_minutes': 'str',
        'rank_short_handed_goals': 'str',
        'rank_plus_minus': 'str',
        'rank_shots': 'str',
        'rank_points': 'str',
        'rank_overtime_goals': 'str',
        'rank_games_played': 'str',
        'goals_in_first_period': 'float',
        'goals_in_second_period': 'float',
        'goals_in_third_period': 'float',
        'goals_trailing_by_one': 'float',
        'goals_trailing_by_two': 'float',
        'goals_trailing_by_three_plus': 'float',
        'goals_when_tied': 'float',
        'goals_leading_by_one': 'float',
        'goals_leading_by_two': 'float'
    }

    attribute_map = {
        'time_on_ice': 'timeOnIce',
        'assists': 'assists',
        'goals': 'goals',
        'pim': 'pim',
        'shots': 'shots',
        'games': 'games',
        'hits': 'hits',
        'power_play_goals': 'powerPlayGoals',
        'power_play_points': 'powerPlayPoints',
        'power_play_time_on_ice': 'powerPlayTimeOnIce',
        'even_time_on_ice': 'evenTimeOnIce',
        'penalty_minutes': 'penaltyMinutes',
        'face_off_pct': 'faceOffPct',
        'shot_pct': 'shotPct',
        'game_winning_goals': 'gameWinningGoals',
        'over_time_goals': 'overTimeGoals',
        'short_handed_goals': 'shortHandedGoals',
        'short_handed_points': 'shortHandedPoints',
        'short_handed_time_on_ice': 'shortHandedTimeOnIce',
        'blocked': 'blocked',
        'plus_minus': 'plusMinus',
        'points': 'points',
        'shifts': 'shifts',
        'time_on_ice_per_game': 'timeOnIcePerGame',
        'even_time_on_ice_per_game': 'evenTimeOnIcePerGame',
        'short_handed_time_on_ice_per_game': 'shortHandedTimeOnIcePerGame',
        'power_play_time_on_ice_per_game': 'powerPlayTimeOnIcePerGame',
        'rank_power_play_goals': 'rankPowerPlayGoals',
        'rank_blocked_shots': 'rankBlockedShots',
        'rank_assists': 'rankAssists',
        'rank_shot_pct': 'rankShotPct',
        'rank_goals': 'rankGoals',
        'rank_hits': 'rankHits',
        'rank_penalty_minutes': 'rankPenaltyMinutes',
        'rank_short_handed_goals': 'rankShortHandedGoals',
        'rank_plus_minus': 'rankPlusMinus',
        'rank_shots': 'rankShots',
        'rank_points': 'rankPoints',
        'rank_overtime_goals': 'rankOvertimeGoals',
        'rank_games_played': 'rankGamesPlayed',
        'goals_in_first_period': 'goalsInFirstPeriod',
        'goals_in_second_period': 'goalsInSecondPeriod',
        'goals_in_third_period': 'goalsInThirdPeriod',
        'goals_trailing_by_one': 'goalsTrailingByOne',
        'goals_trailing_by_two': 'goalsTrailingByTwo',
        'goals_trailing_by_three_plus': 'goalsTrailingByThreePlus',
        'goals_when_tied': 'goalsWhenTied',
        'goals_leading_by_one': 'goalsLeadingByOne',
        'goals_leading_by_two': 'goalsLeadingByTwo'
    }

    def __init__(self, time_on_ice=None, assists=None, goals=None, pim=None, shots=None, games=None, hits=None, power_play_goals=None, power_play_points=None, power_play_time_on_ice=None, even_time_on_ice=None, penalty_minutes=None, face_off_pct=None, shot_pct=None, game_winning_goals=None, over_time_goals=None, short_handed_goals=None, short_handed_points=None, short_handed_time_on_ice=None, blocked=None, plus_minus=None, points=None, shifts=None, time_on_ice_per_game=None, even_time_on_ice_per_game=None, short_handed_time_on_ice_per_game=None, power_play_time_on_ice_per_game=None, rank_power_play_goals=None, rank_blocked_shots=None, rank_assists=None, rank_shot_pct=None, rank_goals=None, rank_hits=None, rank_penalty_minutes=None, rank_short_handed_goals=None, rank_plus_minus=None, rank_shots=None, rank_points=None, rank_overtime_goals=None, rank_games_played=None, goals_in_first_period=None, goals_in_second_period=None, goals_in_third_period=None, goals_trailing_by_one=None, goals_trailing_by_two=None, goals_trailing_by_three_plus=None, goals_when_tied=None, goals_leading_by_one=None, goals_leading_by_two=None):  # noqa: E501
        """PlayerStatsStat - a model defined in Swagger"""  # noqa: E501
        self._time_on_ice = None
        self._assists = None
        self._goals = None
        self._pim = None
        self._shots = None
        self._games = None
        self._hits = None
        self._power_play_goals = None
        self._power_play_points = None
        self._power_play_time_on_ice = None
        self._even_time_on_ice = None
        self._penalty_minutes = None
        self._face_off_pct = None
        self._shot_pct = None
        self._game_winning_goals = None
        self._over_time_goals = None
        self._short_handed_goals = None
        self._short_handed_points = None
        self._short_handed_time_on_ice = None
        self._blocked = None
        self._plus_minus = None
        self._points = None
        self._shifts = None
        self._time_on_ice_per_game = None
        self._even_time_on_ice_per_game = None
        self._short_handed_time_on_ice_per_game = None
        self._power_play_time_on_ice_per_game = None
        self._rank_power_play_goals = None
        self._rank_blocked_shots = None
        self._rank_assists = None
        self._rank_shot_pct = None
        self._rank_goals = None
        self._rank_hits = None
        self._rank_penalty_minutes = None
        self._rank_short_handed_goals = None
        self._rank_plus_minus = None
        self._rank_shots = None
        self._rank_points = None
        self._rank_overtime_goals = None
        self._rank_games_played = None
        self._goals_in_first_period = None
        self._goals_in_second_period = None
        self._goals_in_third_period = None
        self._goals_trailing_by_one = None
        self._goals_trailing_by_two = None
        self._goals_trailing_by_three_plus = None
        self._goals_when_tied = None
        self._goals_leading_by_one = None
        self._goals_leading_by_two = None
        self.discriminator = None
        if time_on_ice is not None:
            self.time_on_ice = time_on_ice
        if assists is not None:
            self.assists = assists
        if goals is not None:
            self.goals = goals
        if pim is not None:
            self.pim = pim
        if shots is not None:
            self.shots = shots
        if games is not None:
            self.games = games
        if hits is not None:
            self.hits = hits
        if power_play_goals is not None:
            self.power_play_goals = power_play_goals
        if power_play_points is not None:
            self.power_play_points = power_play_points
        if power_play_time_on_ice is not None:
            self.power_play_time_on_ice = power_play_time_on_ice
        if even_time_on_ice is not None:
            self.even_time_on_ice = even_time_on_ice
        if penalty_minutes is not None:
            self.penalty_minutes = penalty_minutes
        if face_off_pct is not None:
            self.face_off_pct = face_off_pct
        if shot_pct is not None:
            self.shot_pct = shot_pct
        if game_winning_goals is not None:
            self.game_winning_goals = game_winning_goals
        if over_time_goals is not None:
            self.over_time_goals = over_time_goals
        if short_handed_goals is not None:
            self.short_handed_goals = short_handed_goals
        if short_handed_points is not None:
            self.short_handed_points = short_handed_points
        if short_handed_time_on_ice is not None:
            self.short_handed_time_on_ice = short_handed_time_on_ice
        if blocked is not None:
            self.blocked = blocked
        if plus_minus is not None:
            self.plus_minus = plus_minus
        if points is not None:
            self.points = points
        if shifts is not None:
            self.shifts = shifts
        if time_on_ice_per_game is not None:
            self.time_on_ice_per_game = time_on_ice_per_game
        if even_time_on_ice_per_game is not None:
            self.even_time_on_ice_per_game = even_time_on_ice_per_game
        if short_handed_time_on_ice_per_game is not None:
            self.short_handed_time_on_ice_per_game = short_handed_time_on_ice_per_game
        if power_play_time_on_ice_per_game is not None:
            self.power_play_time_on_ice_per_game = power_play_time_on_ice_per_game
        if rank_power_play_goals is not None:
            self.rank_power_play_goals = rank_power_play_goals
        if rank_blocked_shots is not None:
            self.rank_blocked_shots = rank_blocked_shots
        if rank_assists is not None:
            self.rank_assists = rank_assists
        if rank_shot_pct is not None:
            self.rank_shot_pct = rank_shot_pct
        if rank_goals is not None:
            self.rank_goals = rank_goals
        if rank_hits is not None:
            self.rank_hits = rank_hits
        if rank_penalty_minutes is not None:
            self.rank_penalty_minutes = rank_penalty_minutes
        if rank_short_handed_goals is not None:
            self.rank_short_handed_goals = rank_short_handed_goals
        if rank_plus_minus is not None:
            self.rank_plus_minus = rank_plus_minus
        if rank_shots is not None:
            self.rank_shots = rank_shots
        if rank_points is not None:
            self.rank_points = rank_points
        if rank_overtime_goals is not None:
            self.rank_overtime_goals = rank_overtime_goals
        if rank_games_played is not None:
            self.rank_games_played = rank_games_played
        if goals_in_first_period is not None:
            self.goals_in_first_period = goals_in_first_period
        if goals_in_second_period is not None:
            self.goals_in_second_period = goals_in_second_period
        if goals_in_third_period is not None:
            self.goals_in_third_period = goals_in_third_period
        if goals_trailing_by_one is not None:
            self.goals_trailing_by_one = goals_trailing_by_one
        if goals_trailing_by_two is not None:
            self.goals_trailing_by_two = goals_trailing_by_two
        if goals_trailing_by_three_plus is not None:
            self.goals_trailing_by_three_plus = goals_trailing_by_three_plus
        if goals_when_tied is not None:
            self.goals_when_tied = goals_when_tied
        if goals_leading_by_one is not None:
            self.goals_leading_by_one = goals_leading_by_one
        if goals_leading_by_two is not None:
            self.goals_leading_by_two = goals_leading_by_two

    @property
    def time_on_ice(self):
        """Gets the time_on_ice of this PlayerStatsStat.  # noqa: E501


        :return: The time_on_ice of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._time_on_ice

    @time_on_ice.setter
    def time_on_ice(self, time_on_ice):
        """Sets the time_on_ice of this PlayerStatsStat.


        :param time_on_ice: The time_on_ice of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._time_on_ice = time_on_ice

    @property
    def assists(self):
        """Gets the assists of this PlayerStatsStat.  # noqa: E501


        :return: The assists of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._assists

    @assists.setter
    def assists(self, assists):
        """Sets the assists of this PlayerStatsStat.


        :param assists: The assists of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._assists = assists

    @property
    def goals(self):
        """Gets the goals of this PlayerStatsStat.  # noqa: E501


        :return: The goals of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals

    @goals.setter
    def goals(self, goals):
        """Sets the goals of this PlayerStatsStat.


        :param goals: The goals of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals = goals

    @property
    def pim(self):
        """Gets the pim of this PlayerStatsStat.  # noqa: E501


        :return: The pim of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._pim

    @pim.setter
    def pim(self, pim):
        """Sets the pim of this PlayerStatsStat.


        :param pim: The pim of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._pim = pim

    @property
    def shots(self):
        """Gets the shots of this PlayerStatsStat.  # noqa: E501


        :return: The shots of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._shots

    @shots.setter
    def shots(self, shots):
        """Sets the shots of this PlayerStatsStat.


        :param shots: The shots of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._shots = shots

    @property
    def games(self):
        """Gets the games of this PlayerStatsStat.  # noqa: E501


        :return: The games of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._games

    @games.setter
    def games(self, games):
        """Sets the games of this PlayerStatsStat.


        :param games: The games of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._games = games

    @property
    def hits(self):
        """Gets the hits of this PlayerStatsStat.  # noqa: E501


        :return: The hits of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._hits

    @hits.setter
    def hits(self, hits):
        """Sets the hits of this PlayerStatsStat.


        :param hits: The hits of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._hits = hits

    @property
    def power_play_goals(self):
        """Gets the power_play_goals of this PlayerStatsStat.  # noqa: E501


        :return: The power_play_goals of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._power_play_goals

    @power_play_goals.setter
    def power_play_goals(self, power_play_goals):
        """Sets the power_play_goals of this PlayerStatsStat.


        :param power_play_goals: The power_play_goals of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._power_play_goals = power_play_goals

    @property
    def power_play_points(self):
        """Gets the power_play_points of this PlayerStatsStat.  # noqa: E501


        :return: The power_play_points of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._power_play_points

    @power_play_points.setter
    def power_play_points(self, power_play_points):
        """Sets the power_play_points of this PlayerStatsStat.


        :param power_play_points: The power_play_points of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._power_play_points = power_play_points

    @property
    def power_play_time_on_ice(self):
        """Gets the power_play_time_on_ice of this PlayerStatsStat.  # noqa: E501


        :return: The power_play_time_on_ice of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._power_play_time_on_ice

    @power_play_time_on_ice.setter
    def power_play_time_on_ice(self, power_play_time_on_ice):
        """Sets the power_play_time_on_ice of this PlayerStatsStat.


        :param power_play_time_on_ice: The power_play_time_on_ice of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._power_play_time_on_ice = power_play_time_on_ice

    @property
    def even_time_on_ice(self):
        """Gets the even_time_on_ice of this PlayerStatsStat.  # noqa: E501


        :return: The even_time_on_ice of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._even_time_on_ice

    @even_time_on_ice.setter
    def even_time_on_ice(self, even_time_on_ice):
        """Sets the even_time_on_ice of this PlayerStatsStat.


        :param even_time_on_ice: The even_time_on_ice of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._even_time_on_ice = even_time_on_ice

    @property
    def penalty_minutes(self):
        """Gets the penalty_minutes of this PlayerStatsStat.  # noqa: E501


        :return: The penalty_minutes of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._penalty_minutes

    @penalty_minutes.setter
    def penalty_minutes(self, penalty_minutes):
        """Sets the penalty_minutes of this PlayerStatsStat.


        :param penalty_minutes: The penalty_minutes of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._penalty_minutes = penalty_minutes

    @property
    def face_off_pct(self):
        """Gets the face_off_pct of this PlayerStatsStat.  # noqa: E501


        :return: The face_off_pct of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._face_off_pct

    @face_off_pct.setter
    def face_off_pct(self, face_off_pct):
        """Sets the face_off_pct of this PlayerStatsStat.


        :param face_off_pct: The face_off_pct of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._face_off_pct = face_off_pct

    @property
    def shot_pct(self):
        """Gets the shot_pct of this PlayerStatsStat.  # noqa: E501


        :return: The shot_pct of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._shot_pct

    @shot_pct.setter
    def shot_pct(self, shot_pct):
        """Sets the shot_pct of this PlayerStatsStat.


        :param shot_pct: The shot_pct of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._shot_pct = shot_pct

    @property
    def game_winning_goals(self):
        """Gets the game_winning_goals of this PlayerStatsStat.  # noqa: E501


        :return: The game_winning_goals of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._game_winning_goals

    @game_winning_goals.setter
    def game_winning_goals(self, game_winning_goals):
        """Sets the game_winning_goals of this PlayerStatsStat.


        :param game_winning_goals: The game_winning_goals of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._game_winning_goals = game_winning_goals

    @property
    def over_time_goals(self):
        """Gets the over_time_goals of this PlayerStatsStat.  # noqa: E501


        :return: The over_time_goals of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._over_time_goals

    @over_time_goals.setter
    def over_time_goals(self, over_time_goals):
        """Sets the over_time_goals of this PlayerStatsStat.


        :param over_time_goals: The over_time_goals of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._over_time_goals = over_time_goals

    @property
    def short_handed_goals(self):
        """Gets the short_handed_goals of this PlayerStatsStat.  # noqa: E501


        :return: The short_handed_goals of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._short_handed_goals

    @short_handed_goals.setter
    def short_handed_goals(self, short_handed_goals):
        """Sets the short_handed_goals of this PlayerStatsStat.


        :param short_handed_goals: The short_handed_goals of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._short_handed_goals = short_handed_goals

    @property
    def short_handed_points(self):
        """Gets the short_handed_points of this PlayerStatsStat.  # noqa: E501


        :return: The short_handed_points of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._short_handed_points

    @short_handed_points.setter
    def short_handed_points(self, short_handed_points):
        """Sets the short_handed_points of this PlayerStatsStat.


        :param short_handed_points: The short_handed_points of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._short_handed_points = short_handed_points

    @property
    def short_handed_time_on_ice(self):
        """Gets the short_handed_time_on_ice of this PlayerStatsStat.  # noqa: E501


        :return: The short_handed_time_on_ice of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._short_handed_time_on_ice

    @short_handed_time_on_ice.setter
    def short_handed_time_on_ice(self, short_handed_time_on_ice):
        """Sets the short_handed_time_on_ice of this PlayerStatsStat.


        :param short_handed_time_on_ice: The short_handed_time_on_ice of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._short_handed_time_on_ice = short_handed_time_on_ice

    @property
    def blocked(self):
        """Gets the blocked of this PlayerStatsStat.  # noqa: E501


        :return: The blocked of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._blocked

    @blocked.setter
    def blocked(self, blocked):
        """Sets the blocked of this PlayerStatsStat.


        :param blocked: The blocked of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._blocked = blocked

    @property
    def plus_minus(self):
        """Gets the plus_minus of this PlayerStatsStat.  # noqa: E501


        :return: The plus_minus of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._plus_minus

    @plus_minus.setter
    def plus_minus(self, plus_minus):
        """Sets the plus_minus of this PlayerStatsStat.


        :param plus_minus: The plus_minus of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._plus_minus = plus_minus

    @property
    def points(self):
        """Gets the points of this PlayerStatsStat.  # noqa: E501


        :return: The points of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._points

    @points.setter
    def points(self, points):
        """Sets the points of this PlayerStatsStat.


        :param points: The points of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._points = points

    @property
    def shifts(self):
        """Gets the shifts of this PlayerStatsStat.  # noqa: E501


        :return: The shifts of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._shifts

    @shifts.setter
    def shifts(self, shifts):
        """Sets the shifts of this PlayerStatsStat.


        :param shifts: The shifts of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._shifts = shifts

    @property
    def time_on_ice_per_game(self):
        """Gets the time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501


        :return: The time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._time_on_ice_per_game

    @time_on_ice_per_game.setter
    def time_on_ice_per_game(self, time_on_ice_per_game):
        """Sets the time_on_ice_per_game of this PlayerStatsStat.


        :param time_on_ice_per_game: The time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._time_on_ice_per_game = time_on_ice_per_game

    @property
    def even_time_on_ice_per_game(self):
        """Gets the even_time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501


        :return: The even_time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._even_time_on_ice_per_game

    @even_time_on_ice_per_game.setter
    def even_time_on_ice_per_game(self, even_time_on_ice_per_game):
        """Sets the even_time_on_ice_per_game of this PlayerStatsStat.


        :param even_time_on_ice_per_game: The even_time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._even_time_on_ice_per_game = even_time_on_ice_per_game

    @property
    def short_handed_time_on_ice_per_game(self):
        """Gets the short_handed_time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501


        :return: The short_handed_time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._short_handed_time_on_ice_per_game

    @short_handed_time_on_ice_per_game.setter
    def short_handed_time_on_ice_per_game(self, short_handed_time_on_ice_per_game):
        """Sets the short_handed_time_on_ice_per_game of this PlayerStatsStat.


        :param short_handed_time_on_ice_per_game: The short_handed_time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._short_handed_time_on_ice_per_game = short_handed_time_on_ice_per_game

    @property
    def power_play_time_on_ice_per_game(self):
        """Gets the power_play_time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501


        :return: The power_play_time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._power_play_time_on_ice_per_game

    @power_play_time_on_ice_per_game.setter
    def power_play_time_on_ice_per_game(self, power_play_time_on_ice_per_game):
        """Sets the power_play_time_on_ice_per_game of this PlayerStatsStat.


        :param power_play_time_on_ice_per_game: The power_play_time_on_ice_per_game of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._power_play_time_on_ice_per_game = power_play_time_on_ice_per_game

    @property
    def rank_power_play_goals(self):
        """Gets the rank_power_play_goals of this PlayerStatsStat.  # noqa: E501


        :return: The rank_power_play_goals of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_power_play_goals

    @rank_power_play_goals.setter
    def rank_power_play_goals(self, rank_power_play_goals):
        """Sets the rank_power_play_goals of this PlayerStatsStat.


        :param rank_power_play_goals: The rank_power_play_goals of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_power_play_goals = rank_power_play_goals

    @property
    def rank_blocked_shots(self):
        """Gets the rank_blocked_shots of this PlayerStatsStat.  # noqa: E501


        :return: The rank_blocked_shots of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_blocked_shots

    @rank_blocked_shots.setter
    def rank_blocked_shots(self, rank_blocked_shots):
        """Sets the rank_blocked_shots of this PlayerStatsStat.


        :param rank_blocked_shots: The rank_blocked_shots of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_blocked_shots = rank_blocked_shots

    @property
    def rank_assists(self):
        """Gets the rank_assists of this PlayerStatsStat.  # noqa: E501


        :return: The rank_assists of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_assists

    @rank_assists.setter
    def rank_assists(self, rank_assists):
        """Sets the rank_assists of this PlayerStatsStat.


        :param rank_assists: The rank_assists of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_assists = rank_assists

    @property
    def rank_shot_pct(self):
        """Gets the rank_shot_pct of this PlayerStatsStat.  # noqa: E501


        :return: The rank_shot_pct of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_shot_pct

    @rank_shot_pct.setter
    def rank_shot_pct(self, rank_shot_pct):
        """Sets the rank_shot_pct of this PlayerStatsStat.


        :param rank_shot_pct: The rank_shot_pct of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_shot_pct = rank_shot_pct

    @property
    def rank_goals(self):
        """Gets the rank_goals of this PlayerStatsStat.  # noqa: E501


        :return: The rank_goals of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_goals

    @rank_goals.setter
    def rank_goals(self, rank_goals):
        """Sets the rank_goals of this PlayerStatsStat.


        :param rank_goals: The rank_goals of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_goals = rank_goals

    @property
    def rank_hits(self):
        """Gets the rank_hits of this PlayerStatsStat.  # noqa: E501


        :return: The rank_hits of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_hits

    @rank_hits.setter
    def rank_hits(self, rank_hits):
        """Sets the rank_hits of this PlayerStatsStat.


        :param rank_hits: The rank_hits of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_hits = rank_hits

    @property
    def rank_penalty_minutes(self):
        """Gets the rank_penalty_minutes of this PlayerStatsStat.  # noqa: E501


        :return: The rank_penalty_minutes of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_penalty_minutes

    @rank_penalty_minutes.setter
    def rank_penalty_minutes(self, rank_penalty_minutes):
        """Sets the rank_penalty_minutes of this PlayerStatsStat.


        :param rank_penalty_minutes: The rank_penalty_minutes of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_penalty_minutes = rank_penalty_minutes

    @property
    def rank_short_handed_goals(self):
        """Gets the rank_short_handed_goals of this PlayerStatsStat.  # noqa: E501


        :return: The rank_short_handed_goals of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_short_handed_goals

    @rank_short_handed_goals.setter
    def rank_short_handed_goals(self, rank_short_handed_goals):
        """Sets the rank_short_handed_goals of this PlayerStatsStat.


        :param rank_short_handed_goals: The rank_short_handed_goals of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_short_handed_goals = rank_short_handed_goals

    @property
    def rank_plus_minus(self):
        """Gets the rank_plus_minus of this PlayerStatsStat.  # noqa: E501


        :return: The rank_plus_minus of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_plus_minus

    @rank_plus_minus.setter
    def rank_plus_minus(self, rank_plus_minus):
        """Sets the rank_plus_minus of this PlayerStatsStat.


        :param rank_plus_minus: The rank_plus_minus of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_plus_minus = rank_plus_minus

    @property
    def rank_shots(self):
        """Gets the rank_shots of this PlayerStatsStat.  # noqa: E501


        :return: The rank_shots of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_shots

    @rank_shots.setter
    def rank_shots(self, rank_shots):
        """Sets the rank_shots of this PlayerStatsStat.


        :param rank_shots: The rank_shots of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_shots = rank_shots

    @property
    def rank_points(self):
        """Gets the rank_points of this PlayerStatsStat.  # noqa: E501


        :return: The rank_points of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_points

    @rank_points.setter
    def rank_points(self, rank_points):
        """Sets the rank_points of this PlayerStatsStat.


        :param rank_points: The rank_points of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_points = rank_points

    @property
    def rank_overtime_goals(self):
        """Gets the rank_overtime_goals of this PlayerStatsStat.  # noqa: E501


        :return: The rank_overtime_goals of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_overtime_goals

    @rank_overtime_goals.setter
    def rank_overtime_goals(self, rank_overtime_goals):
        """Sets the rank_overtime_goals of this PlayerStatsStat.


        :param rank_overtime_goals: The rank_overtime_goals of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_overtime_goals = rank_overtime_goals

    @property
    def rank_games_played(self):
        """Gets the rank_games_played of this PlayerStatsStat.  # noqa: E501


        :return: The rank_games_played of this PlayerStatsStat.  # noqa: E501
        :rtype: str
        """
        return self._rank_games_played

    @rank_games_played.setter
    def rank_games_played(self, rank_games_played):
        """Sets the rank_games_played of this PlayerStatsStat.


        :param rank_games_played: The rank_games_played of this PlayerStatsStat.  # noqa: E501
        :type: str
        """

        self._rank_games_played = rank_games_played

    @property
    def goals_in_first_period(self):
        """Gets the goals_in_first_period of this PlayerStatsStat.  # noqa: E501


        :return: The goals_in_first_period of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals_in_first_period

    @goals_in_first_period.setter
    def goals_in_first_period(self, goals_in_first_period):
        """Sets the goals_in_first_period of this PlayerStatsStat.


        :param goals_in_first_period: The goals_in_first_period of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals_in_first_period = goals_in_first_period

    @property
    def goals_in_second_period(self):
        """Gets the goals_in_second_period of this PlayerStatsStat.  # noqa: E501


        :return: The goals_in_second_period of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals_in_second_period

    @goals_in_second_period.setter
    def goals_in_second_period(self, goals_in_second_period):
        """Sets the goals_in_second_period of this PlayerStatsStat.


        :param goals_in_second_period: The goals_in_second_period of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals_in_second_period = goals_in_second_period

    @property
    def goals_in_third_period(self):
        """Gets the goals_in_third_period of this PlayerStatsStat.  # noqa: E501


        :return: The goals_in_third_period of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals_in_third_period

    @goals_in_third_period.setter
    def goals_in_third_period(self, goals_in_third_period):
        """Sets the goals_in_third_period of this PlayerStatsStat.


        :param goals_in_third_period: The goals_in_third_period of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals_in_third_period = goals_in_third_period

    @property
    def goals_trailing_by_one(self):
        """Gets the goals_trailing_by_one of this PlayerStatsStat.  # noqa: E501


        :return: The goals_trailing_by_one of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals_trailing_by_one

    @goals_trailing_by_one.setter
    def goals_trailing_by_one(self, goals_trailing_by_one):
        """Sets the goals_trailing_by_one of this PlayerStatsStat.


        :param goals_trailing_by_one: The goals_trailing_by_one of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals_trailing_by_one = goals_trailing_by_one

    @property
    def goals_trailing_by_two(self):
        """Gets the goals_trailing_by_two of this PlayerStatsStat.  # noqa: E501


        :return: The goals_trailing_by_two of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals_trailing_by_two

    @goals_trailing_by_two.setter
    def goals_trailing_by_two(self, goals_trailing_by_two):
        """Sets the goals_trailing_by_two of this PlayerStatsStat.


        :param goals_trailing_by_two: The goals_trailing_by_two of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals_trailing_by_two = goals_trailing_by_two

    @property
    def goals_trailing_by_three_plus(self):
        """Gets the goals_trailing_by_three_plus of this PlayerStatsStat.  # noqa: E501


        :return: The goals_trailing_by_three_plus of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals_trailing_by_three_plus

    @goals_trailing_by_three_plus.setter
    def goals_trailing_by_three_plus(self, goals_trailing_by_three_plus):
        """Sets the goals_trailing_by_three_plus of this PlayerStatsStat.


        :param goals_trailing_by_three_plus: The goals_trailing_by_three_plus of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals_trailing_by_three_plus = goals_trailing_by_three_plus

    @property
    def goals_when_tied(self):
        """Gets the goals_when_tied of this PlayerStatsStat.  # noqa: E501


        :return: The goals_when_tied of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals_when_tied

    @goals_when_tied.setter
    def goals_when_tied(self, goals_when_tied):
        """Sets the goals_when_tied of this PlayerStatsStat.


        :param goals_when_tied: The goals_when_tied of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals_when_tied = goals_when_tied

    @property
    def goals_leading_by_one(self):
        """Gets the goals_leading_by_one of this PlayerStatsStat.  # noqa: E501


        :return: The goals_leading_by_one of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals_leading_by_one

    @goals_leading_by_one.setter
    def goals_leading_by_one(self, goals_leading_by_one):
        """Sets the goals_leading_by_one of this PlayerStatsStat.


        :param goals_leading_by_one: The goals_leading_by_one of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals_leading_by_one = goals_leading_by_one

    @property
    def goals_leading_by_two(self):
        """Gets the goals_leading_by_two of this PlayerStatsStat.  # noqa: E501


        :return: The goals_leading_by_two of this PlayerStatsStat.  # noqa: E501
        :rtype: float
        """
        return self._goals_leading_by_two

    @goals_leading_by_two.setter
    def goals_leading_by_two(self, goals_leading_by_two):
        """Sets the goals_leading_by_two of this PlayerStatsStat.


        :param goals_leading_by_two: The goals_leading_by_two of this PlayerStatsStat.  # noqa: E501
        :type: float
        """

        self._goals_leading_by_two = goals_leading_by_two

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PlayerStatsStat, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PlayerStatsStat):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
